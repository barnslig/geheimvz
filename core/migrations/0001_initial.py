# Generated by Django 5.1.2 on 2024-11-11 17:16

import core.helpers
import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
import imagekit.models.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('favourite_books', models.TextField(blank=True, null=True, verbose_name='Favourite books')),
                ('favourite_food', models.TextField(blank=True, null=True, verbose_name='Favourite food')),
                ('favourite_movies', models.TextField(blank=True, null=True, verbose_name='Favourite movies')),
                ('favourite_music', models.TextField(blank=True, null=True, verbose_name='Favourite music')),
                ('hobbies', models.TextField(blank=True, null=True, verbose_name='Hobbies')),
                ('i_am_good_at', models.TextField(blank=True, null=True, verbose_name='I am good at')),
                ('i_wish_for', models.TextField(blank=True, null=True, verbose_name='I wish for')),
                ('looking_for', models.TextField(blank=True, null=True, verbose_name='Looking for')),
                ('nickname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nickname')),
                ('pronouns', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pronouns')),
                ('relationship', models.CharField(blank=True, max_length=255, null=True, verbose_name='Relationship')),
                ('what_i_dont_like', models.TextField(blank=True, null=True, verbose_name="What I don't like")),
                ('what_i_like', models.TextField(blank=True, null=True, verbose_name='What I like')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full name')),
                ('can_see_profile', models.CharField(choices=[('E', 'Everyone logged in'), ('F', 'Only my friends')], default='F', max_length=1, verbose_name='Who can see your page?')),
                ('can_send_messages', models.CharField(choices=[('E', 'Everyone logged in'), ('F', 'Only my friends')], default='F', max_length=1, verbose_name='Who can send you messages?')),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=core.helpers.UploadToUuidFilename('profiles/'), validators=[core.helpers.ValidateMaxFilesize(10)], verbose_name='Profile picture')),
                ('first_car_make', models.CharField(blank=True, max_length=255, null=True, verbose_name='Make of your first car')),
                ('grew_up_street', models.CharField(blank=True, max_length=255, null=True, verbose_name='Street where you grew up')),
                ('mothers_maiden_name', models.CharField(blank=True, max_length=255, null=True, verbose_name="Your mother's maiden name")),
                ('name_of_first_pet', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of your first pet')),
                ('appearance_color', models.CharField(choices=[('theme-rose', 'Rose'), ('theme-blue', 'Blue'), ('theme-green', 'Green'), ('theme-dark', 'Dark Mode'), ('theme-contrast', 'High Contrast')], default='theme-rose', max_length=255, verbose_name='Theme color')),
                ('appearance_font', models.CharField(choices=[('font-sans', 'Sans-Serif'), ('font-serif', 'Serif'), ('font-mono', 'Monospace'), ('font-comic', 'Comic')], default='font-sans', max_length=255, verbose_name='Theme font')),
                ('appearance_background', models.CharField(choices=[('NONE', 'None'), ('CLOUDS', 'Clouds'), ('CHARLIE', 'Charlie Brown'), ('WAVES', 'Waves')], default='NONE', max_length=255, verbose_name='Theme background')),
                ('appearance_logo', models.CharField(choices=[('SIMPLE', 'Simple'), ('PRIDE', 'Pride'), ('EYE', 'All-Seeing Eye')], default='SIMPLE', max_length=255, verbose_name='Theme logo')),
                ('appearance_size', models.CharField(choices=[('size-xs', 'Extra Small'), ('size-sm', 'Small'), ('size-base', 'Default'), ('size-lg', 'Large')], default='size-base', max_length=255, verbose_name='Theme size')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
